// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using NTTDataSales.Domain.Context;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace NTTDataSales.Domain.Migrations
{
    [DbContext(typeof(NttContext))]
    [Migration("20250322005846_AddSaleItems")]
    partial class AddSaleItems
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("NTTDataSales.Domain.Entities.Branch", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("ID"));

                    b.Property<string>("NAME")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("character varying(30)");

                    b.HasKey("ID");

                    b.ToTable("Branches");
                });

            modelBuilder.Entity("NTTDataSales.Domain.Entities.Customer", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("ID"));

                    b.Property<string>("DOCUMENT")
                        .IsRequired()
                        .HasMaxLength(14)
                        .HasColumnType("character varying(14)");

                    b.Property<string>("EMAIL")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("NAME")
                        .IsRequired()
                        .HasMaxLength(70)
                        .HasColumnType("character varying(70)");

                    b.Property<string>("PHONE")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("ID");

                    b.ToTable("Customers");
                });

            modelBuilder.Entity("NTTDataSales.Domain.Entities.Product", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("ID"));

                    b.Property<string>("DESCRIPTION")
                        .IsRequired()
                        .HasMaxLength(80)
                        .HasColumnType("character varying(80)");

                    b.Property<string>("NAME")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("character varying(60)");

                    b.Property<double>("PRICE")
                        .HasPrecision(15, 2)
                        .HasColumnType("double precision");

                    b.HasKey("ID");

                    b.ToTable("Products");
                });

            modelBuilder.Entity("NTTDataSales.Domain.Entities.Sale", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("ID"));

                    b.Property<int>("BRANCHID")
                        .HasColumnType("integer");

                    b.Property<int>("CUSTOMERID")
                        .HasColumnType("integer");

                    b.Property<DateTime>("DATE")
                        .HasColumnType("timestamp with time zone");

                    b.Property<bool>("SALECANCELLED")
                        .HasColumnType("boolean");

                    b.Property<decimal>("TOTALDISCOUNT")
                        .HasColumnType("numeric");

                    b.Property<decimal>("TOTALVALUE")
                        .HasColumnType("numeric");

                    b.HasKey("ID");

                    b.HasIndex("BRANCHID");

                    b.HasIndex("CUSTOMERID");

                    b.ToTable("Sales");
                });

            modelBuilder.Entity("NTTDataSales.Domain.Entities.SaleItem", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("ID"));

                    b.Property<decimal>("DISCOUNT")
                        .HasPrecision(12, 2)
                        .HasColumnType("numeric(12,2)");

                    b.Property<bool>("ITEMCANCELLED")
                        .HasColumnType("boolean");

                    b.Property<int>("PRODUCTID")
                        .HasColumnType("integer");

                    b.Property<int>("QUATITY")
                        .HasColumnType("integer");

                    b.Property<int?>("SaleID")
                        .HasColumnType("integer");

                    b.Property<decimal>("TOTALPRICE")
                        .HasPrecision(12, 2)
                        .HasColumnType("numeric(12,2)");

                    b.Property<decimal>("UNITARYPRICE")
                        .HasPrecision(12, 2)
                        .HasColumnType("numeric(12,2)");

                    b.HasKey("ID");

                    b.HasIndex("PRODUCTID");

                    b.HasIndex("SaleID");

                    b.ToTable("SaleItem");
                });

            modelBuilder.Entity("NTTDataSales.Domain.Entities.Sale", b =>
                {
                    b.HasOne("NTTDataSales.Domain.Entities.Branch", "BRANCH")
                        .WithMany()
                        .HasForeignKey("BRANCHID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("NTTDataSales.Domain.Entities.Customer", "CUSTOMER")
                        .WithMany()
                        .HasForeignKey("CUSTOMERID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("BRANCH");

                    b.Navigation("CUSTOMER");
                });

            modelBuilder.Entity("NTTDataSales.Domain.Entities.SaleItem", b =>
                {
                    b.HasOne("NTTDataSales.Domain.Entities.Product", "PRODUCT")
                        .WithMany()
                        .HasForeignKey("PRODUCTID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("NTTDataSales.Domain.Entities.Sale", null)
                        .WithMany("SALEITEMS")
                        .HasForeignKey("SaleID");

                    b.Navigation("PRODUCT");
                });

            modelBuilder.Entity("NTTDataSales.Domain.Entities.Sale", b =>
                {
                    b.Navigation("SALEITEMS");
                });
#pragma warning restore 612, 618
        }
    }
}
